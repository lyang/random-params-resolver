name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  checks: write
  packages: write
  pull-requests: write

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build with Maven
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn clean verify

      - name: Upload coverage data
        uses: codecov/codecov-action@13ce06bfc6bbe3ecf90edbbf1bc32fe5978ca1d3 #v5.3.1
        if: ${{ !cancelled() }}
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@44ecb3a270cd942bdf0fa8f2ce14cb32493e810a #v1.0.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: SonarQube
        if: github.ref_name == github.event.repository.default_branch
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar

      - name: Set release variable (pull request)
        if: github.event_name == 'pull_request'
        run: |
          echo "SOURCE=PR${{ github.event.pull_request.number }}" >> $GITHUB_ENV

      - name: Set release variable (branch)
        if: github.event_name != 'pull_request'
        run: |
          echo "SOURCE=${{ github.ref_name }}" >> $GITHUB_ENV

      - name: Release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
          MAJOR: ${{ github.ref_name == github.event.repository.default_branch && '1' || '0' }}
        run: |
          ./release.sh >> $GITHUB_OUTPUT

      - name: Comment (pull request)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Version `${{ steps.release.outputs.revision }}` is deployed!'
            })

      - name: Release summary
        run: |
          echo "Version \`${{ steps.release.outputs.revision }}\` is deployed!" >> $GITHUB_STEP_SUMMARY
